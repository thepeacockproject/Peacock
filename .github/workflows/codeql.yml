name: "CodeQL"

on:
  push:
    branches: [ "v6", v*, "master" ]
  pull_request:
    branches: [ "v6", v*, "master" ]

env:
  DOTNET_VERSION: 8.x

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ "csharp", "javascript" ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - if: matrix.language != 'csharp'
      name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - if: matrix.language == 'csharp'
      name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - if: matrix.language == 'csharp'
      name: Build Patcher
      run: |
        export DOTNET_NOLOGO=true
        export DOTNET_CLI_TELEMETRY_OPTOUT=true
        cd $GITHUB_WORKSPACE/patcher
        dotnet build HitmanPatcher.CLI/HitmanPatcher.CLI.csproj -c Release -p:EnableWindowsTargeting=True
        dotnet build HitmanPatcher.UI/HitmanPatcher.UI.csproj -c Release -p:EnableWindowsTargeting=True
        dotnet build HitmanPatcher.CLI/HitmanPatcher.CLI.csproj -r linux-x64 -c "Release - Linux" -p:IsLinux=true
        dotnet build HitmanPatcher.CLI/HitmanPatcher.CLI.csproj -c Release -p:EnableWindowsTargeting=True -p:IsLegacy=True
        dotnet build HitmanPatcher.UI/HitmanPatcher.UI.csproj -c Release -p:EnableWindowsTargeting=True -p:IsLegacy=True

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
